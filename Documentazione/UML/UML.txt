@startuml
!theme carbon-gray

title JavaBeats 1.1

package playableModel{
  interface IPlayable{
    + PlayableID: int
    + playableName: String
    + creator: IProfile
    + getTracks(): Tracks[]
  }

  class Track implements IPlayable{
    + duration: Time
    + genre: Genre
    + year: int
  }

  interface ICollection extends IPlayable{
    + trackNumber: int
    + addTrack(IProfile): void
    + removeTrack(IProfile: void
  }

  class Album implements ICollection{
    - trackArray: Track[]
  }

  class Playlist implements ICollection{
    - trackList: List<Track>
  }

  class Podcast implements ICollection{
    - trackList: List<Track>
  }
}

package managerModel{
  enum EMODE{
    + SEQUENTIAL
    + RANDOM
    + LOOP
  } 

  class PlayerManager << (S, #FF7700) Singleton >> {
    + queue: LinkedList<Track>
    + play(IPlayable, EMODE): void
    + pause(IPlayable): void
  }

  class ProfileManager << (S, #FF7700) Singleton >> {
    + activeProfile: IProfile
    + createProfile(username: String, mail: String, password: String)
    + editProfile(IProfile, username: String, password: String)
    + changePrivileges(IProfile)
    + login(username: String, password: String)
  }

  enum ECOLLECTION{
    + ALBUM
    + PLAYLIST
    + PODCAST
  }

  class CollectionManager << (S, #FF7700) Singleton >> {
    + createCollection(ECOLLECTION, IProfile, String): ICollection
    + removeCollection(ICollection, IProfile): void
    + editName(ICollection, IProfile, String): void
  }

  class DBManager << (S, #FF7700) Singleton >> {
    + searchProfile(String): IProfile[]
    + searchPlayable(String): ICollection[]
  }

  PlayerManager--EMODE
  CollectionManager--ECOLLECTION
}

package userModel{
  interface IProfile{
    + username: String 
    + mail: String 
    + password: String 
    + name: String 
    + surname: String 
    + biografy: String 
  }
  class User implements IProfile{
    
  }
  class Artist implements IProfile{
    - totalListeners: int
  }
}

hide empty fields
hide empty methods

@enduml
